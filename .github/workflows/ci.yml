name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
    steps:
      # Check out the repository with full history
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Node.js with caching for npm dependencies
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      # Install dependencies in a clean environment
      - run: npm ci

      # Set commit shas for Nx (if required)
      - uses: nrwl/nx-set-shas@v4

      # Run Nx tasks including linting, testing, type-checking, building and deploying to staging.
      # The deploy command output is captured to extract the staging URL.
      - name: Run Nx tasks including staging deployment
        id: nx
        run: |
          # Execute the combined Nx targets and capture the full output
          output=$(npx nx affected -t lint test:ci type-check build deploy:staging)
          echo "$output"
          # Optionally, save the output to a file for debugging:
          echo "$output" > staging_deploy_output.txt
          #
          # Extract the first URL starting with "https://"
          # Adjust the regular expression if your output format changes.
          url=$(echo "$output" | grep -oP 'https://\S+' | head -n 1)
          echo "Extracted staging URL: $url"
          # Set the URL as an output variable using the new GITHUB_OUTPUT syntax.
          echo "staging_url=$url" >> "$GITHUB_OUTPUT"

      # If the event is a pull request, add a comment containing the staging deployment link.
      - name: Comment on PR with staging deployment link
        if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: 'Staging Deployment'
          message: |
            The staging deployment is now live at:
            ${{ steps.nx.outputs.staging_url }}

            Please review the deployed changes.
