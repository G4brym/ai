name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
    steps:
      # Checkout repository with full history.
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Node.js and cache npm dependencies.
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      # Install dependencies.
      - name: Install dependencies
        run: npm ci

      # Set commit SHAs for Nx.
      - name: Set Nx SHAs
        uses: nrwl/nx-set-shas@v4

      # Run Nx tasks including the staging deployment.
      - name: Run Nx tasks including staging deployment
        id: deploy-staging
        run: |
          # Execute Nx targets and capture the output
          output=$(npx nx affected -t lint test:ci type-check build deploy:staging)
          echo "$output"
          # Optionally save output for debugging:
          echo "$output" > staging_deploy_output.txt
          # Extract the first URL starting with "https://"
          url=$(echo "$output" | grep -oP 'https://\S+' | head -n 1)
          echo "Extracted staging URL: $url"
          # Set the URL as an environment variable for later steps
          echo "STAGING_URL=$url" >> $GITHUB_ENV
          # Also set as an output variable if needed
          echo "staging_url=$url" >> "$GITHUB_OUTPUT"

      # If the workflow is triggered by a pull request, post a comment with the staging URL.
      - name: Add comment to PR with staging deployment link
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              issue_number: context.issue.number,
              repo: context.repo.repo,
              body: `The staging deployment is now live at: ${process.env.STAGING_URL}`
            })
