name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: write
  contents: read
  pull-requests: write

jobs:
  main:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Node.js with caching for npm dependencies
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      # Restore the cached .nx folder (if it exists)
      - name: Restore Nx cache
        id: nx-cache
        uses: actions/cache@v3
        with:
          path: .nx
          key: nx-cache-${{ runner.os }}-${{ hashFiles('**/nx.json') }}
          restore-keys: |
            nx-cache-${{ runner.os }}-

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Set commit shas for Nx if needed
      - name: Set Nx SHAs
        uses: nrwl/nx-set-shas@v4

      # Run Nx tasks including the staging deployment and extract the URL.
      - name: Run Nx tasks including staging deployment
        id: checks
        run: npx nx affected -t lint test:ci type-check build # deploy:staging

      - name: Cache Nx folder
        uses: actions/cache@v3
        with:
          path: .nx
          key: nx-cache-${{ runner.os }}-${{ hashFiles('**/nx.json') }}
          restore-keys: |
            nx-cache-${{ runner.os }}-
