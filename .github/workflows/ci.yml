name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: write
  contents: read
  issues: write  # Allow writing issue comments
  pull-requests: write

jobs:
  main:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Node.js with caching for npm dependencies
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Set commit shas for Nx if needed
      - name: Set Nx SHAs
        uses: nrwl/nx-set-shas@v4

      # Run Nx tasks including the staging deployment and extract the URL.
      - name: Run Nx tasks including staging deployment
        id: deploy-staging
        run: |
          output=$(npx nx affected -t lint test:ci type-check build deploy:staging)
          echo "$output"
          # Extract the first URL starting with "https://"
          url=$(echo "$output" | grep -oP 'https://\S+' | head -n 1)
          echo "Extracted staging URL: $url"
          # Set the URL as an environment variable for subsequent steps.
          echo "STAGING_URL=$url" >> $GITHUB_ENV
          # Also, set as an output variable.
          echo "staging_url=$url" >> "$GITHUB_OUTPUT"

      - name: Run comment script
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          npx tsx scripts/comment-with-deploy-urls.ts "${{ github.event.pull_request.comments_url }}" "${{ steps.deploy-staging.outputs.staging_url }}" "${{ secrets.GITHUB_TOKEN }}"

      # Add a comment to the PR with the staging deployment link.
      # - name: Add comment to PR with staging deployment link
      #   if: ${{ github.event_name == 'pull_request' }}
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       octokit.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: `The staging deployment is now live at: ${process.env.STAGING_URL}`
      #       })
